{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shubhashita Singh\\\\Desktop\\\\PROJECTS\\\\Hive_Chat\\\\client\\\\src\\\\components\\\\ChatArea.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Box, Card, CardContent, Typography, TextField, IconButton, List, ListItem, Avatar, Paper } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { io } from 'socket.io-client';\nimport { useThemeContext } from '../ThemeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nconst ChatArea = ({\n  selectedChat,\n  currentUser\n}) => {\n  _s();\n  const {\n    isLightTheme\n  } = useThemeContext();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n\n  // Identify user on mount\n  useEffect(() => {\n    if (currentUser !== null && currentUser !== void 0 && currentUser.id) {\n      socket.emit('identify', currentUser.id);\n    }\n  }, [currentUser]);\n\n  // Listen for incoming messages\n  useEffect(() => {\n    const handleReceive = msg => {\n      // Defensive: Only process if both selectedChat and currentUser exist and have id\n      if (!selectedChat || !currentUser || !selectedChat.id || !currentUser.id) return;\n      // Always show messages for this chat, regardless of sender\n      if (msg.from === currentUser.id && msg.to === selectedChat.id || msg.from === selectedChat.id && msg.to === currentUser.id) {\n        setMessages(prev => {\n          // Prevent duplicate messages (in case of echo)\n          if (prev.length > 0 && prev[prev.length - 1].text === msg.text && prev[prev.length - 1].time === msg.time && prev[prev.length - 1].from === msg.from) {\n            return prev;\n          }\n          return [...prev, msg];\n        });\n      }\n    };\n    socket.on('receiveMessage', handleReceive);\n    return () => {\n      socket.off('receiveMessage', handleReceive);\n    };\n  }, [selectedChat, currentUser]);\n\n  // Fetch messages from backend when chat changes\n  useEffect(() => {\n    if (!selectedChat || !currentUser) {\n      setMessages([]);\n      return;\n    }\n    const fetchMessages = async () => {\n      try {\n        const res = await fetch(`http://localhost:5000/messages?user1=${currentUser.id}&user2=${selectedChat.id}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (res.ok) {\n          const data = await res.json();\n          setMessages(data.map(m => ({\n            ...m,\n            from: m.sender_id,\n            to: m.recipient_id,\n            text: m.text,\n            time: m.timestamp ? new Date(m.timestamp).toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit',\n              hour12: true,\n              timeZone: 'Asia/Kolkata'\n            }) : ''\n          })));\n        } else {\n          setMessages([]);\n        }\n      } catch (err) {\n        setMessages([]);\n      }\n    };\n    fetchMessages();\n  }, [selectedChat, currentUser]);\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [messages]);\n  const handleSend = async () => {\n    if (input.trim() === \"\" || !selectedChat) return;\n    const msg = {\n      from: currentUser.id,\n      to: selectedChat.id,\n      text: input,\n      time: new Date().toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true,\n        timeZone: 'Asia/Kolkata'\n      })\n    };\n    // Save to backend first\n    try {\n      const res = await fetch('http://localhost:5000/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sender_id: msg.from,\n          recipient_id: msg.to,\n          text: msg.text,\n          timestamp: new Date().toISOString()\n        })\n      });\n      if (res.ok) {\n        const saved = await res.json();\n        msg.time = saved.timestamp ? new Date(saved.timestamp).toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit',\n          hour12: true,\n          timeZone: 'Asia/Kolkata'\n        }) : msg.time;\n      }\n    } catch (err) {\n      // Optionally show error\n    }\n    socket.emit('sendMessage', msg);\n    setInput(\"\");\n  };\n  const handleInputKeyDown = e => {\n    if (e.key === \"Enter\") handleSend();\n  };\n  if (!selectedChat || !currentUser || !selectedChat.id || !currentUser.id) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100vh\",\n        background: isLightTheme ? \"#fff\" : \"#15161a\",\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: isLightTheme ? '#888' : '#b0b3c6',\n        children: \"Select a chat to start messaging\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flex: 1,\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"100vh\",\n      background: isLightTheme ? \"#fff\" : \"#15161a\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        background: isLightTheme ? \"#f5f5f5\" : \"#15161a\",\n        color: isLightTheme ? \"#222\" : \"#fff\",\n        boxShadow: 2,\n        borderRadius: 0,\n        minHeight: 48\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          display: \"flex\",\n          alignItems: \"center\",\n          py: 0.5,\n          minHeight: 40,\n          '&:last-child': {\n            pb: 1\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            bgcolor: isLightTheme ? \"#e0e0e0\" : \"#0a2a2e\",\n            color: isLightTheme ? \"#222\" : \"white\",\n            mr: 2\n          },\n          children: selectedChat.username ? selectedChat.username[0] : \"C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: selectedChat.username || selectedChat.name || \"Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: isLightTheme ? \"#666\" : \"#b0b3c6\",\n            children: \"Online\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        flex: 1,\n        overflowY: 'auto',\n        background: isLightTheme ? '#f5f5f5' : '#414142',\n        borderRadius: 0,\n        scrollbarWidth: 'thin',\n        scrollbarColor: isLightTheme ? '#bdbdbd #f5f5f5' : '#333 #414142',\n        '&::-webkit-scrollbar': {\n          width: '6px',\n          background: isLightTheme ? '#f5f5f5' : '#414142'\n        },\n        '&::-webkit-scrollbar-thumb': {\n          background: isLightTheme ? '#bdbdbd' : '#333',\n          borderRadius: '8px',\n          minHeight: '2px'\n        },\n        '&::-webkit-scrollbar-thumb:hover': {\n          background: isLightTheme ? '#9e9e9e' : '#222'\n        },\n        '&::-webkit-scrollbar-button': {\n          display: 'none',\n          width: 0,\n          height: 0,\n          background: 'transparent',\n          border: 'none',\n          content: 'none'\n        }\n      },\n      elevation: 0,\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: [messages.map((msg, idx) => {\n          var _msg$sender$id, _msg$sender;\n          // Defensive: check sender exists and has id\n          const senderId = (_msg$sender$id = (_msg$sender = msg.sender) === null || _msg$sender === void 0 ? void 0 : _msg$sender.id) !== null && _msg$sender$id !== void 0 ? _msg$sender$id : msg.from;\n          if (typeof senderId === 'undefined' || !currentUser || !currentUser.id) return null;\n          const isCurrentUser = senderId === currentUser.id;\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            sx: {\n              justifyContent: isCurrentUser ? \"flex-end\" : \"flex-start\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                bgcolor: isCurrentUser ? isLightTheme ? \"#e3f2fd\" : \"#0a2a2e\" : isLightTheme ? \"#fff\" : \"#15161a\",\n                color: isLightTheme ? \"#222\" : \"#fff\",\n                px: 2,\n                py: 1,\n                maxWidth: '70%',\n                wordBreak: 'break-word',\n                boxShadow: 1,\n                display: 'flex',\n                gap: 1,\n                borderRadius: 18\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  display: 'inline'\n                },\n                children: msg.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 33\n            }, this)\n          }, msg.id || idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: 1,\n        p: 1,\n        background: isLightTheme ? \"#f5f5f5\" : \"#15161a\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: handleInputKeyDown,\n        placeholder: \"Type a message...\",\n        variant: \"outlined\",\n        size: \"small\",\n        fullWidth: true,\n        sx: {\n          input: {\n            color: isLightTheme ? '#222' : 'white'\n          },\n          '& .MuiOutlinedInput-root': {\n            color: isLightTheme ? '#222' : 'white',\n            '& fieldset': {\n              borderColor: isLightTheme ? 'rgba(0,0,0,0.2)' : 'rgba(255,255,255,0.5)'\n            },\n            '&:hover fieldset': {\n              borderColor: isLightTheme ? 'rgba(0,0,0,0.2)' : 'rgba(255,255,255,0.5)'\n            },\n            '&.Mui-focused fieldset': {\n              borderColor: isLightTheme ? 'rgba(0,0,0,0.2)' : 'rgba(255,255,255,0.5)'\n            },\n            boxShadow: 'none',\n            outline: 'none'\n          }\n        },\n        InputProps: {\n          style: {\n            color: isLightTheme ? '#222' : 'white'\n          }\n        },\n        disabled: !selectedChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        onClick: handleSend,\n        disabled: !selectedChat || input.trim() === \"\",\n        sx: {\n          bgcolor: isLightTheme ? '#e3f2fd' : 'rgba(255,255,255,0.5)',\n          color: isLightTheme ? '#1976d2' : 'white',\n          '&:hover': {\n            bgcolor: isLightTheme ? '#bbdefb' : '#15161a'\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatArea, \"xTlzzJH8TF9NlbAcxEdhnWr+hkk=\", false, function () {\n  return [useThemeContext];\n});\n_c = ChatArea;\nexport default ChatArea;\nvar _c;\n$RefreshReg$(_c, \"ChatArea\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Card","CardContent","Typography","TextField","IconButton","List","ListItem","Avatar","Paper","SendIcon","io","useThemeContext","jsxDEV","_jsxDEV","socket","ChatArea","selectedChat","currentUser","_s","isLightTheme","messages","setMessages","input","setInput","messagesEndRef","id","emit","handleReceive","msg","from","to","prev","length","text","time","on","off","fetchMessages","res","fetch","method","headers","ok","data","json","map","m","sender_id","recipient_id","timestamp","Date","toLocaleTimeString","hour","minute","hour12","timeZone","err","current","scrollIntoView","behavior","handleSend","trim","body","JSON","stringify","toISOString","saved","handleInputKeyDown","e","key","sx","flex","display","flexDirection","height","background","alignItems","justifyContent","children","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","boxShadow","borderRadius","minHeight","py","pb","bgcolor","mr","username","name","overflowY","scrollbarWidth","scrollbarColor","width","border","content","elevation","idx","_msg$sender$id","_msg$sender","senderId","sender","isCurrentUser","px","maxWidth","wordBreak","gap","ref","p","value","onChange","target","onKeyDown","placeholder","size","fullWidth","borderColor","outline","InputProps","style","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Shubhashita Singh/Desktop/PROJECTS/Hive_Chat/client/src/components/ChatArea.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Box, Card, CardContent, Typography, TextField, IconButton, List, ListItem, Avatar, Paper } from \"@mui/material\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport { io } from 'socket.io-client';\r\nimport { useThemeContext } from '../ThemeContext';\r\n\r\n\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nconst ChatArea = ({ selectedChat, currentUser }) => {\r\n    const { isLightTheme } = useThemeContext();\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    const messagesEndRef = useRef(null);\r\n\r\n    // Identify user on mount\r\n    useEffect(() => {\r\n        if (currentUser?.id) {\r\n            socket.emit('identify', currentUser.id);\r\n        }\r\n    }, [currentUser]);\r\n\r\n    // Listen for incoming messages\r\n    useEffect(() => {\r\n        const handleReceive = (msg) => {\r\n            // Defensive: Only process if both selectedChat and currentUser exist and have id\r\n            if (!selectedChat || !currentUser || !selectedChat.id || !currentUser.id) return;\r\n            // Always show messages for this chat, regardless of sender\r\n            if (\r\n                (msg.from === currentUser.id && msg.to === selectedChat.id) ||\r\n                (msg.from === selectedChat.id && msg.to === currentUser.id)\r\n            ) {\r\n                setMessages((prev) => {\r\n                    // Prevent duplicate messages (in case of echo)\r\n                    if (prev.length > 0 && prev[prev.length - 1].text === msg.text && prev[prev.length - 1].time === msg.time && prev[prev.length - 1].from === msg.from) {\r\n                        return prev;\r\n                    }\r\n                    return [...prev, msg];\r\n                });\r\n            }\r\n        };\r\n        socket.on('receiveMessage', handleReceive);\r\n        return () => {\r\n            socket.off('receiveMessage', handleReceive);\r\n        };\r\n    }, [selectedChat, currentUser]);\r\n\r\n\r\n    // Fetch messages from backend when chat changes\r\n    useEffect(() => {\r\n        if (!selectedChat || !currentUser) {\r\n            setMessages([]);\r\n            return;\r\n        }\r\n        const fetchMessages = async () => {\r\n            try {\r\n                const res = await fetch(\r\n                    `http://localhost:5000/messages?user1=${currentUser.id}&user2=${selectedChat.id}`,\r\n                    { method: 'GET', headers: { 'Content-Type': 'application/json' } }\r\n                );\r\n                if (res.ok) {\r\n                    const data = await res.json();\r\n                    setMessages(data.map(m => ({\r\n                        ...m,\r\n                        from: m.sender_id,\r\n                        to: m.recipient_id,\r\n                        text: m.text,\r\n                        time: m.timestamp ? new Date(m.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: true, timeZone: 'Asia/Kolkata' }) : '',\r\n                    })));\r\n                } else {\r\n                    setMessages([]);\r\n                }\r\n            } catch (err) {\r\n                setMessages([]);\r\n            }\r\n        };\r\n        fetchMessages();\r\n    }, [selectedChat, currentUser]);\r\n\r\n    useEffect(() => {\r\n        if (messagesEndRef.current) {\r\n            messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }, [messages]);\r\n\r\n\r\n    const handleSend = async () => {\r\n        if (input.trim() === \"\" || !selectedChat) return;\r\n        const msg = {\r\n            from: currentUser.id,\r\n            to: selectedChat.id,\r\n            text: input,\r\n            time: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: true, timeZone: 'Asia/Kolkata' })\r\n        };\r\n        // Save to backend first\r\n        try {\r\n            const res = await fetch('http://localhost:5000/messages', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    sender_id: msg.from,\r\n                    recipient_id: msg.to,\r\n                    text: msg.text,\r\n                    timestamp: new Date().toISOString()\r\n                })\r\n            });\r\n            if (res.ok) {\r\n                const saved = await res.json();\r\n                msg.time = saved.timestamp ? new Date(saved.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: true, timeZone: 'Asia/Kolkata' }) : msg.time;\r\n            }\r\n        } catch (err) {\r\n            // Optionally show error\r\n        }\r\n        socket.emit('sendMessage', msg);\r\n        setInput(\"\");\r\n    };\r\n\r\n    const handleInputKeyDown = (e) => {\r\n        if (e.key === \"Enter\") handleSend();\r\n    };\r\n\r\n    if (!selectedChat || !currentUser || !selectedChat.id || !currentUser.id) {\r\n        return (\r\n            <Box sx={{ flex: 1, display: \"flex\", flexDirection: \"column\", height: \"100vh\", background: isLightTheme ? \"#fff\" : \"#15161a\", alignItems: 'center', justifyContent: 'center' }}>\r\n                <Typography variant=\"h6\" color={isLightTheme ? '#888' : '#b0b3c6'}>Select a chat to start messaging</Typography>\r\n            </Box>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ flex: 1, display: \"flex\", flexDirection: \"column\", height: \"100vh\", background: isLightTheme ? \"#fff\" : \"#15161a\" }}>\r\n            {/* Chat Card at the top */}\r\n            <Card sx={{ background: isLightTheme ? \"#f5f5f5\" : \"#15161a\", color: isLightTheme ? \"#222\" : \"#fff\", boxShadow: 2, borderRadius: 0, minHeight: 48 }}>\r\n                <CardContent sx={{ display: \"flex\", alignItems: \"center\", py: 0.5, minHeight: 40, '&:last-child': { pb: 1 } }}>\r\n                    <Avatar sx={{ bgcolor: isLightTheme ? \"#e0e0e0\" : \"#0a2a2e\", color: isLightTheme ? \"#222\" : \"white\", mr: 2 }}>{selectedChat.username ? selectedChat.username[0] : \"C\"}</Avatar>\r\n                    <Box>\r\n                        <Typography variant=\"h6\">{selectedChat.username || selectedChat.name || \"Chat\"}</Typography>\r\n                        <Typography variant=\"body2\" color={isLightTheme ? \"#666\" : \"#b0b3c6\"}>Online</Typography>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n            {/* Chat Messages */}\r\n            <Paper\r\n                sx={{\r\n                    flex: 1,\r\n                    overflowY: 'auto',\r\n                    background: isLightTheme ? '#f5f5f5' : '#414142',\r\n                    borderRadius: 0,\r\n                    scrollbarWidth: 'thin',\r\n                    scrollbarColor: isLightTheme ? '#bdbdbd #f5f5f5' : '#333 #414142',\r\n                    '&::-webkit-scrollbar': {\r\n                        width: '6px',\r\n                        background: isLightTheme ? '#f5f5f5' : '#414142',\r\n                    },\r\n                    '&::-webkit-scrollbar-thumb': {\r\n                        background: isLightTheme ? '#bdbdbd' : '#333',\r\n                        borderRadius: '8px',\r\n                        minHeight: '2px',\r\n                    },\r\n                    '&::-webkit-scrollbar-thumb:hover': {\r\n                        background: isLightTheme ? '#9e9e9e' : '#222',\r\n                    },\r\n                    '&::-webkit-scrollbar-button': {\r\n                        display: 'none',\r\n                        width: 0,\r\n                        height: 0,\r\n                        background: 'transparent',\r\n                        border: 'none',\r\n                        content: 'none',\r\n                    },\r\n                }}\r\n                elevation={0}\r\n            >\r\n                <List>\r\n                    {messages.map((msg, idx) => {\r\n                        // Defensive: check sender exists and has id\r\n                        const senderId = msg.sender?.id ?? msg.from;\r\n                        if (typeof senderId === 'undefined' || !currentUser || !currentUser.id) return null;\r\n                        const isCurrentUser = senderId === currentUser.id;\r\n                        return (\r\n                            <ListItem key={msg.id || idx} sx={{ justifyContent: isCurrentUser ? \"flex-end\" : \"flex-start\" }}>\r\n                                <Box sx={{\r\n                                    bgcolor: isCurrentUser ? (isLightTheme ? \"#e3f2fd\" : \"#0a2a2e\") : (isLightTheme ? \"#fff\" : \"#15161a\"),\r\n                                    color: isLightTheme ? \"#222\" : \"#fff\",\r\n                                    px: 2, py: 1,\r\n                                    maxWidth: '70%',\r\n                                    wordBreak: 'break-word',\r\n                                    boxShadow: 1,\r\n                                    display: 'flex',\r\n                                    gap: 1,\r\n                                    borderRadius: 18,\r\n                                }}>\r\n                                    <Typography variant=\"body2\" sx={{ display: 'inline' }}>{msg.text}</Typography>\r\n                                </Box>\r\n                            </ListItem>\r\n                        );\r\n                    })}\r\n                    <div ref={messagesEndRef} />\r\n                </List>\r\n            </Paper>\r\n            {/* Input Area */}\r\n            <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1, p: 1, background: isLightTheme ? \"#f5f5f5\" : \"#15161a\" }}>\r\n                <TextField\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    onKeyDown={handleInputKeyDown}\r\n                    placeholder=\"Type a message...\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{\r\n                        input: { color: isLightTheme ? '#222' : 'white' },\r\n                        '& .MuiOutlinedInput-root': {\r\n                            color: isLightTheme ? '#222' : 'white',\r\n                            '& fieldset': { borderColor: isLightTheme ? 'rgba(0,0,0,0.2)' : 'rgba(255,255,255,0.5)' },\r\n                            '&:hover fieldset': { borderColor: isLightTheme ? 'rgba(0,0,0,0.2)' : 'rgba(255,255,255,0.5)' },\r\n                            '&.Mui-focused fieldset': { borderColor: isLightTheme ? 'rgba(0,0,0,0.2)' : 'rgba(255,255,255,0.5)' },\r\n                            boxShadow: 'none',\r\n                            outline: 'none',\r\n                        },\r\n                    }}\r\n                    InputProps={{ style: { color: isLightTheme ? '#222' : 'white' } }}\r\n                    disabled={!selectedChat}\r\n                />\r\n                <IconButton color=\"primary\" onClick={handleSend} disabled={!selectedChat || input.trim() === \"\"} sx={{ bgcolor: isLightTheme ? '#e3f2fd' : 'rgba(255,255,255,0.5)', color: isLightTheme ? '#1976d2' : 'white', '&:hover': { bgcolor: isLightTheme ? '#bbdefb' : '#15161a' } }}>\r\n                    <SendIcon />\r\n                </IconButton>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default ChatArea;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}