{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shubhashita Singh\\\\Desktop\\\\PROJECTS\\\\Hive_Chat\\\\client\\\\src\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useMemo, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [isLightTheme, setIsLightTheme] = useState(() => {\n    const stored = localStorage.getItem('isLightTheme');\n    return stored === null ? true : stored === 'true';\n  });\n  const toggleTheme = () => {\n    setIsLightTheme(prev => {\n      localStorage.setItem('isLightTheme', !prev);\n      return !prev;\n    });\n  };\n  const value = useMemo(() => ({\n    isLightTheme,\n    toggleTheme\n  }), [isLightTheme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n_s(ThemeProvider, \"3/SFRxMf0t4KOKYScIN3S16EE/c=\");\n_c = ThemeProvider;\nexport const useThemeContext = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useThemeContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useMemo","useContext","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","isLightTheme","setIsLightTheme","stored","localStorage","getItem","toggleTheme","prev","setItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useThemeContext","_s2","$RefreshReg$"],"sources":["C:/Users/Shubhashita Singh/Desktop/PROJECTS/Hive_Chat/client/src/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useMemo, useContext } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n    const [isLightTheme, setIsLightTheme] = useState(() => {\r\n        const stored = localStorage.getItem('isLightTheme');\r\n        return stored === null ? true : stored === 'true';\r\n    });\r\n\r\n    const toggleTheme = () => {\r\n        setIsLightTheme((prev) => {\r\n            localStorage.setItem('isLightTheme', !prev);\r\n            return !prev;\r\n        });\r\n    };\r\n\r\n    const value = useMemo(() => ({ isLightTheme, toggleTheme }), [isLightTheme]);\r\n    return <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>;\r\n};\r\n\r\nexport const useThemeContext = () => useContext(ThemeContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,MAAM;IACnD,MAAMW,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACnD,OAAOF,MAAM,KAAK,IAAI,GAAG,IAAI,GAAGA,MAAM,KAAK,MAAM;EACrD,CAAC,CAAC;EAEF,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACtBJ,eAAe,CAAEK,IAAI,IAAK;MACtBH,YAAY,CAACI,OAAO,CAAC,cAAc,EAAE,CAACD,IAAI,CAAC;MAC3C,OAAO,CAACA,IAAI;IAChB,CAAC,CAAC;EACN,CAAC;EAED,MAAME,KAAK,GAAGhB,OAAO,CAAC,OAAO;IAAEQ,YAAY;IAAEK;EAAY,CAAC,CAAC,EAAE,CAACL,YAAY,CAAC,CAAC;EAC5E,oBAAOL,OAAA,CAACC,YAAY,CAACa,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAV,QAAA,EAAEA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAwB,CAAC;AAClF,CAAC;AAACd,EAAA,CAfWF,aAAa;AAAAiB,EAAA,GAAbjB,aAAa;AAiB1B,OAAO,MAAMkB,eAAe,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvB,UAAU,CAACG,YAAY,CAAC;AAAA;AAACoB,GAAA,CAAjDD,eAAe;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}